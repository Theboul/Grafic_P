/*var terreno = new Figura(new Puntos(0f, -0.1f, 0f), 30f, 0.2f, 30f, Color4.ForestGreen);
            GestorEscenarios.EscenarioActual.AgregarObjeto("base_pasto", new ObjetoU { Partes = { { "terreno", terreno } } });
            
            var terreno1 = new Figura(new Puntos(0f, -0.1f, 0f), -30f, 0.2f, 30f, Color4.ForestGreen);
            GestorEscenarios.EscenarioActual.AgregarObjeto("base_pasto2", new ObjetoU { Partes = { { "terreno1", terreno1 } } });

            var terreno2 = new Figura(new Puntos(0f, -0.1f, 0f), -30f, 0.2f, -30, Color4.ForestGreen);
            GestorEscenarios.EscenarioActual.AgregarObjeto("base_pasto3", new ObjetoU { Partes = { { "terreno2", terreno2 } } });

            var terreno3 = new Figura(new Puntos(0f, -0.1f, 0f), 30f, 0.2f, -30, Color4.ForestGreen);
            GestorEscenarios.EscenarioActual.AgregarObjeto("base_pasto4", new ObjetoU { Partes = { { "terreno3", terreno3 } } });
           
           // --- Camino Recto Inicial ---
            var tramoInicial = new Figura(new Puntos(-2f, 0f, -1.5f), 3.5f, 0.2f, 14f, Color4.Gray);
            GestorEscenarios.EscenarioActual.AgregarObjeto("tramo_inicial", new ObjetoU { Partes = { { "tramo1", tramoInicial } } });

            // --- Camino Recto final ---
            var tramoFinal = new Figura(new Puntos(-17.1f, 0f, -1.5f), 3.5f, 0.2f, 14f, Color4.Gray);
            GestorEscenarios.EscenarioActual.AgregarObjeto("tramo_final", new ObjetoU { Partes = { { "tramo2", tramoFinal } } });

            // --- Camino Recto en Medio de Curva ---
            var tramoMedio = new Figura(new Puntos(-10f, 0f, 20f), 4.5f, 0.2f, 0.30f, Color4.Gray);
            GestorEscenarios.EscenarioActual.AgregarObjeto("tramo_medio", new ObjetoU { Partes = { { "tramo3", tramoMedio } } });

            // --- Curva (cuarto de círculo) ---
            var curvaIzquierda = ModeloU.GenerarCurva(new Puntos(-7f, 0f, 7f), 1.5f, 0.2f, 11.5f, Color4.Gray);
            var curva = new ObjetoU();
            foreach (var kv in curvaIzquierda)
            {
                curva.Partes.Add(kv.Key, kv.Value);
            }
            GestorEscenarios.EscenarioActual.AgregarObjeto("curva_1", curva);


            var curvaDerecha = ModeloU.GenerarCurva(new Puntos(-10f, 0f, 7f), 1.5f, 0.2f, 11.5f, Color4.Gray,true);
            var curva2 = new ObjetoU();
            foreach (var kv1 in curvaDerecha)
            {
                curva2.Partes.Add(kv1.Key, kv1.Value);
            }
            GestorEscenarios.EscenarioActual.AgregarObjeto("curva_2", curva2);


            var nuevoObjeto = new ObjetoU( new Puntos(7.0f, 1.5f, -3.0f), 2.0f, 2.0f, 0.3f, Color4.Purple);
            var nuevoObjeto1 = new ObjetoU( new Puntos(-0.4f, 4f, -3.0f), 2.0f, 2.0f, 0.3f, Color4.DarkGray);
            var nuevoObjeto2 = new ObjetoU( new Puntos(-0.4f, 9.0f, -3.0f), 2.0f, 2.0f, 0.3f, Color4.Gold);
            GestorEscenarios.EscenarioActual.AgregarObjeto("u1_morado", nuevoObjeto);

            GestorEscenarios.EscenarioActual.AgregarObjeto("u2_darkGray", nuevoObjeto1);
            GestorEscenarios.EscenarioActual.Objetos["u2_darkGray"].Transform.Rotate(180f, 0f, 0f);
            GestorEscenarios.EscenarioActual.Objetos["u2_darkGray"].Transform.Escalate(4f);

            GestorEscenarios.EscenarioActual.AgregarObjeto("u3_gold", nuevoObjeto2);

            //arboles
            GestorEscenarios.AgregarArchObj("arbol_1", "Core/objetosObj/arbolObj/Tree/Tree_3.obj", new Vector3(-7f, 0.1f, 10f));
            GestorEscenarios.AgregarArchObj("Hojas_a1", "Core/objetosObj/arbolObj/Leaves_pile/Leaves_pile_3.obj", new Vector3(-7f, 0.1f, 10f));
            GestorEscenarios.AgregarArchObj("arbol_2", "Core/objetosObj/arbolObj/Tree/Tree_3.obj", new Vector3(-7f, 0.1f, -10f));
            GestorEscenarios.AgregarArchObj("arbol_3", "Core/objetosObj/arbolObj/Tree/Tree_3.obj", new Vector3(-20f, 0.1f, 0f));

            GestorEscenarios.AgregarArchObj("arbol_4", "Core/objetosObj/arbolObj/Tree/Tree_2.obj", new Vector3(-23f, 0.1f, 15f));
            GestorEscenarios.AgregarArchObj("Hojas_a4", "Core/objetosObj/arbolObj/Leaves_pile/Leaves_pile_2.obj", new Vector3(-23f, 0.1f, 15f));
            GestorEscenarios.AgregarArchObj("rama_a4", "Core/objetosObj/arbolObj/Log/Log_2.obj", new Vector3(-20f, 0.1f, 15f));
            
            GestorEscenarios.AgregarArchObj("arbol_5", "Core/objetosObj/arbolObj/Tree/Tree_2.obj", new Vector3(2f, 0.1f, 23f));
            GestorEscenarios.AgregarArchObj("Hojas_a5", "Core/objetosObj/arbolObj/Leaves_pile/Leaves_pile_2.obj", new Vector3(2f, 0.1f, 23f));

            GestorEscenarios.AgregarArchObj("arbol_6", "Core/objetosObj/arbolObj/Tree/Tree_1.obj", new Vector3(4f, 0.1f, 7f));
            GestorEscenarios.AgregarArchObj("Hojas_a6", "Core/objetosObj/arbolObj/Leaves_pile/Leaves_pile_1.obj", new Vector3(4f, 0.1f, 7f));

            GestorEscenarios.AgregarArchObj("rama_1", "Core/objetosObj/arbolObj/Log/Log_2.obj", new Vector3(-12.5f, 0.1f, 22.5f));
            GestorEscenarios.EscenarioActual.Objetos["rama_1"].Transform.Rotate(0f, 40f, 0f);

            GestorEscenarios.AgregarArchObj("rama_2", "Core/objetosObj/arbolObj/Log/Log_1.obj", new Vector3(7f, 0.1f, 22f));
            GestorEscenarios.EscenarioActual.Objetos["rama_2"].Transform.Rotate(0f, 195f, 0f);

            GestorEscenarios.AgregarArchObj("rama_3", "Core/objetosObj/arbolObj/Log/Log_2.obj", new Vector3(11f, 0.1f, 9f));
            GestorEscenarios.EscenarioActual.Objetos["rama_3"].Transform.Rotate(0f, 20f, 0f);

            GestorEscenarios.AgregarArchObj("rama_4", "Core/objetosObj/arbolObj/Log/Log_3.obj", new Vector3(-20f, 0.1f, 5.5f));
            GestorEscenarios.EscenarioActual.Objetos["rama_4"].Transform.Rotate(0f, 50f, 0f);

            GestorEscenarios.AgregarArchObj("rama_5", "Core/objetosObj/arbolObj/Log/Log_3.obj", new Vector3(3f, 0.1f, 0f));
            GestorEscenarios.EscenarioActual.Objetos["rama_5"].Transform.Rotate(0f, 15f, 0f);

            GestorEscenarios.AgregarArchObj("tronco_1", "Core/objetosObj/arbolObj/Log/Log_5.obj", new Vector3(-7f, 0.1f, 15f));
            if (GestorEscenarios.EscenarioActual.Objetos.TryGetValue("tronco_1", out var tronco1))
            {
                tronco1.Transform.Rotate(0f, 90f, 0f);
            }

            GestorEscenarios.AgregarArchObj("tocon_1", "Core/objetosObj/arbolObj/Stump/Stump_3.obj", new Vector3(-7f, 0.1f, 23f));


            var objetos = LectorModeloObj.CargarObjetoDesdeObj("Core/objetosObj/autoObj/untitled.obj");
            foreach (var (nombre, objeto) in objetos)
            {
                GestorEscenarios.EscenarioActual.AgregarObjeto(nombre, objeto);
            }

            if (GestorEscenarios.EscenarioActual.Objetos.TryGetValue("auto", out var auto))
            {
                auto.Transform.Position = new Vector3(-0.5f, 0.2f, 0f);
                auto.RecalcularCentroDeMasa();
            }


            // --- Recalcular el centro de masa general ---
            GestorEscenarios.EscenarioActual.RecalcularCentroDeMasa();

            GestorEscenarios.Guardar("Escenario_Pista_Final");

            //Crear acciones por acción, siguiendo modelo procesador

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionRotacion(
                "u3_gold",
                tiempoInicio: 2f,
                rotacionDeltaEuler: new Vector3(0f, 720f, 0f),
                duracion: 10f
            ));

            // === Avanzar el auto (traslación) ===
            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 0f,
                    desplazamiento: new Vector3(0f, 0f, 11f),
                    duracion: 5f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 5f,
                    desplazamiento: new Vector3(-0.5f, 0f, 2f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionRotacion(
                    "auto",
                    tiempoInicio: 5f,
                    rotacionDeltaEuler: new Vector3(0f, 10f, 0f),
                    duracion: 5f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 5.833f,
                    desplazamiento: new Vector3(-1f, 0f, 2f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 6.666f,
                    desplazamiento: new Vector3(-2f, 0f, 2f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 7.499f,
                    desplazamiento: new Vector3(-2f, 0f, 1.5f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 8.332f,
                    desplazamiento: new Vector3(-2.5f, 0f, 0.5f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 9.165f,
                    desplazamiento: new Vector3(-2f, 0f, 0f),
                    duracion: 0.833f
                )
            );
            
            //vuelta U
            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionRotacion(
                    "auto",
                    tiempoInicio: 9.998f,
                    rotacionDeltaEuler: new Vector3(0f, -0.5f, 0f),
                    duracion: 3f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 9.998f,
                    desplazamiento: new Vector3(-2f, 0f, -0.5f),
                    duracion: 0.833f
                )
            );


            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 10.831f,
                    desplazamiento: new Vector3(-2f, 0f, -1.5f),
                    duracion: 0.833f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 11.664f, 
                    desplazamiento: new Vector3(-0.5f, 0f, -2f),
                    duracion: 0.833f
                )
            );
            
            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 12.497f, 
                    desplazamiento: new Vector3(-0.5f, 0f, -6f),
                    duracion: 3f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionRotacion(
                    "auto",
                    tiempoInicio: 12.497f,
                    rotacionDeltaEuler: new Vector3(0f, -0.05f, 0f),
                    duracion: 0.5f
                )
            );

            ProcesadorAccionesGlobal.Escena.AccionesActivas.Add(
                UtilidadesAnimacion.CrearAccionTraslacion(
                    "auto",
                    tiempoInicio: 15.497f, 
                    desplazamiento: new Vector3(0.3f, 0f, -9f),
                    duracion: 5f
                )
            );

            //GestorAnimaciones.GuardarLibreto("Libreto", ProcesadorAccionesGlobal.Escena.AccionesActivas);*/